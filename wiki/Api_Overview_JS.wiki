<h1>JavaScript Object Model</h1>
The JavaScript Object Model provides the C# interface to the native browser JavaScript Runtime. The class names are prefixed with <b>Js</b> so they will not collide with the C# classes. Otherwise the API is identical to JavaScript.

<img src='http://skmedia.googlecode.com/svn/trunk/skmedia/sharpkit/images/Api_Overview/JsObjectModel.png'/>

<h3>Example: using native JavaScript API in C#</h3>
The following example illustrates how to use the C# Model classes to write native JavaScript code.
{{{
using SharpKit.HtmlModel;
using SharpKit.JavaScriptModel;

namespace SharpKitSamples.JavaScriptAPI
{
	[JsType(JsMode.Global, "index.js")]
	class index : HtmlContext
	{
		static index()
		{
			//Example: using native JavaScript API in C#
			document.writeln("using JsDate...<br/>");
			var date = new JsDate();
			document.writeln("Local time is: " + date.toString());
			document.writeln("<br/>");

			document.writeln("using JsString...<br/>");
			var str = "Invoking JsString.italics()".As<JsString>().italics();
			document.writeln(str);
			document.writeln("<br/>");

			document.writeln("using JsMath...<br/>");
			document.writeln("Invoking JsMath.random() -> " + JsMath.random().toString());
			document.writeln("<br/>");
		}
	}
}

}}}

The JavaScript code that was generated by SharpKit:
{{{
//@AutoGenerated
document.writeln("using JsDate...<br/>");
var date = new Date();
document.writeln("Local time is: " + date.toString());
document.writeln("<br/>");
document.writeln("using JsString...<br/>");
var str = "Invoking JsString.italics()".italics();
document.writeln(str);
document.writeln("<br/>");
document.writeln("using JsMath...<br/>");
document.writeln("Invoking JsMath.random() -> " + Math.random().toString());
document.writeln("<br/>");
}}}

Sample output
<pre>
using JsDate...
Local time is: Fri Jan 29 01:49:54 UTC+0200 2010

using JsString...
Invoking JsString.italics() 

using JsMath...
Invoking JsMath.random() -> 0.4205741667695668
</pre>